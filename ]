<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;

class UserController extends Controller
{
	public function index()
	{
		return User::all();
	}

	public function create(Request $request)
	{
		$validator = $this->getValidator($request->all());

		if($validator->fails()){
			return response($validator->getMessageBag(), 400);
		}

		try{
			$user = new User($request->all());
			$user->save();
		}catch{
			return response($user->toArray() , 200);
		}
	}

	public function show($id)
	{
		//TODO: Handle Show
	}

	public function update(Request $request , $id)
	{
		//TODO: Handle Update
	}

	public function destroy(Request $request , $id)
	{
		//TODO: Handle Destroy
	}

	//TODO: Develop updateMany , deleteMany

	// Function for return a Validator instance
	public function getValidator($data)
	{
		//Magic method to get the name of the method that invokes this function
		$method = debug_backtrace()[1]['function'];

		switch ($method){
		case "create":
			$rules = [
				'name' => ['required','string','max:255'],
				'surname' => ['required','string','max:255'],
				'email' => ['required','unique:users' , 'email' ,'max:255'],
				'password' => ['required' , 'min:8' , 'max:16']
			];
			break;
		}

		return Validator::make($data , $rules);
	}




}
